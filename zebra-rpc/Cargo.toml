[package]
name = "zebra-rpc"
version = "1.0.0-beta.18"
authors = ["Zcash Foundation <zebra@zfnd.org>"]
license = "MIT OR Apache-2.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = []

# Production features that activate extra dependencies, or extra features in dependencies

# Experimental mining RPC support
getblocktemplate-rpcs = [
    "rand",
    "zebra-consensus/getblocktemplate-rpcs",
    "zebra-state/getblocktemplate-rpcs",
    "zebra-node-services/getblocktemplate-rpcs",
    "zebra-chain/getblocktemplate-rpcs",
]

# Test-only features
proptest-impl = [
    "proptest",
    "proptest-derive",
    "zebra-consensus/proptest-impl",
    "zebra-state/proptest-impl",
    "zebra-chain/proptest-impl",
]

[dependencies]
chrono = { version = "0.4.23", default-features = false, features = ["clock", "std"] }
futures = "0.3.25"

# lightwalletd sends JSON-RPC requests over HTTP 1.1
hyper = { version = "0.14.23", features = ["http1", "server"] }

jsonrpc-core = "18.0.0"
jsonrpc-derive = "18.0.0"
jsonrpc-http-server = "18.0.0"
num_cpus = "1.15.0"

# zebra-rpc needs the preserve_order feature in serde_json, which is a dependency of jsonrpc-core
serde_json = { version = "1.0.91", features = ["preserve_order"] }
indexmap = { version = "1.9.2", features = ["serde"] }

tokio = { version = "1.23.1", features = ["time", "rt-multi-thread", "macros", "tracing"] }
tower = "0.4.13"

tracing = "0.1.37"
tracing-futures = "0.2.5"

hex = { version = "0.4.3", features = ["serde"] }
serde = { version = "1.0.152", features = ["serde_derive"] }

# Experimental feature getblocktemplate-rpcs
rand = { version = "0.8.5", package = "rand", optional = true }

# Test-only feature proptest-impl
proptest = { version = "0.10.1", optional = true }
proptest-derive = { version = "0.3.0", optional = true }

zebra-chain = { path = "../zebra-chain" }
zebra-consensus = { path = "../zebra-consensus" }
zebra-network = { path = "../zebra-network" }
zebra-node-services = { path = "../zebra-node-services" }
zebra-script = { path = "../zebra-script" }
zebra-state = { path = "../zebra-state" }

[dev-dependencies]
insta = { version = "1.24.1", features = ["redactions", "json", "ron"] }

proptest = "0.10.1"
proptest-derive = "0.3.0"

thiserror = "1.0.38"
tokio = { version = "1.23.1", features = ["full", "tracing", "test-util"] }

zebra-chain = { path = "../zebra-chain", features = ["proptest-impl"] }
zebra-state = { path = "../zebra-state", features = ["proptest-impl"] }
zebra-test = { path = "../zebra-test" }
