# Note that all fields that take a lint level have these possible values:
# * deny - An error will be produced and the check will fail
# * warn - A warning will be produced, but the check will not fail
# * allow - No warning or error will be produced, though in some cases a note
# will be

# This section is considered when running `cargo deny check bans`.
# More documentation about the 'bans' section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html
[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "deny"

# Don't allow wildcard ("any version") dependencies
wildcards = "deny"
# Allow private and dev wildcard dependencies.
# Switch this to `false` when #6924 is implemented.
allow-wildcard-paths = true

# The graph highlighting used when creating dotgraphs for crates
# with multiple versions
# * lowest-version - The path to the lowest versioned duplicate is highlighted
# * simplest-path - The path to the version with the fewest edges is highlighted
# * all - Both lowest-version and simplest-path are used
highlight = "all"

# List of crates that are allowed. Use with care!
#allow = [
#]

# List of crates that can never become Zebra dependencies.
deny = [
    # Often has memory safety vulnerabilities.
    # Enabled by --all-features, use the `cargo hack` script in the deny.toml CI job instead.
    { name = "openssl" },
    { name = "openssl-sys" },
]

# We only use this for some `librustzcash` and `orchard` crates.
# If we add a crate here, duplicate dependencies of that crate are still shown.
#
# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
]

# Similarly to `skip` allows you to skip certain crates during duplicate
# detection. Unlike skip, it also includes the entire tree of transitive
# dependencies starting at the specified crate, up to a certain depth, which is
# by default infinite
skip-tree = [
    # wait for ordered-map to release a dependency fix
    { name = "ordered-map", version = "=0.4.2" },

    # wait for primitive-types to upgrade
    { name = "proc-macro-crate", version = "=0.1.5" },

    # wait for `color-eyre` to upgrade
    { name = "owo-colors", version = "=3.5.0" },

    # wait for hdwallet to upgrade
    { name = "ring", version = "=0.16.20" },

    # wait for structopt upgrade (or upgrade to clap 4)
    { name = "clap", version = "=2.34.0" },

    # wait for abscissa_core to upgrade
    {name = "tracing-log", version = "=0.1.4" },

    # wait for tokio-test -> tokio-stream to upgrade
    { name = "tokio-util", version = "=0.6.10" },

    # wait for console-subscriber and tower to update hdrhistogram.
    # also wait for ron to update insta, and wait for tonic update.
    { name = "base64", version = "=0.13.1" },

    # wait for console-subscriber to update tonic.
    { name = "tonic", version = "=0.10.2" },
    { name = "tonic-build", version = "=0.10.2" },

    # wait for elasticsearch to update base64, darling, rustc_version, serde_with
    { name = "elasticsearch", version = "=8.5.0-alpha.1" },
]

# This section is considered when running `cargo deny check sources`.
# More documentation about the 'sources' section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html
[sources]
# Lint level for what to happen when a crate from a crate registry that is not
# in the allow list is encountered
unknown-registry = "deny"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "deny"
# List of URLs for allowed crate registries. Defaults to the crates.io index
# if not specified. If it is specified but empty, no registries are allowed.
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of URLs for allowed Git repositories
allow-git = [
]

[sources.allow-org]
github = [
]
