name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      network:
        default: 'Mainnet'
      checkpoint_sync:
        default: true

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  ZONE: us-central1-a
  MACHINE_TYPE: n2-standard-4
  DEPLOY_SA: cos-vm@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com

jobs:
  deploy:
    name: Deploy one zebrad node
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.4.0
      with:
        persist-credentials: false

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v4

    - name: Set up gcloud
      uses: google-github-actions/setup-gcloud@v0.5.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCLOUD_AUTH }}

    # Build and push image to Google Container Registry
    - name: Build
      # Tagging w/ the commit SHA blocks the :latest tag on GCR
      run: |
        gcloud builds submit \
          --config cloudbuild.yaml \
          --substitutions SHORT_SHA="${{ env.GITHUB_SHA_SHORT }}",BRANCH_NAME="${{ env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}",_CHECKPOINT_SYNC="${{ github.event.inputs.checkpoint_sync }}",_NETWORK="${{ github.event.inputs.network }}"

    # Creates Compute Engine virtual machine instance w/ zebrad container and disks
    - name: Create instance running zebrad container image
      run: |
        gcloud compute instances create-with-container "zebrad-${{ env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}-${{ env.GITHUB_SHA_SHORT }}" \
        --container-image "gcr.io/${{ env.PROJECT_ID }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/${{ env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}:${{ env.GITHUB_SHA_SHORT }}" \
        --container-mount-disk mount-path='/zebrad-cache',name=zebrad-cache-${{ env.GITHUB_SHA_SHORT }} \
        --create-disk name=zebrad-cache-${{ env.GITHUB_SHA_SHORT }},auto-delete=yes,size=100GB,type=pd-balanced \
        --machine-type ${{ env.MACHINE_TYPE }} \
        --service-account ${{ env.DEPLOY_SA }} \
        --tags zebrad \
        --zone ${{ env.ZONE }}
