name: Lint

on:
  # we build Rust caches on main, so they can be shared by all branches:
  # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache
  push:
    branches:
      - main
  pull_request:
    branches:
      - 'main'

jobs:
  changed-files:
    runs-on: ubuntu-latest
    name: Checks changed-files
    outputs:
      rust: ${{ steps.changed-files-rust.outputs.any_changed == 'true' }}
      workflows: ${{ steps.changed-files-workflows.outputs.any_changed == 'true' }}
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Rust files
        id: changed-files-rust
        uses: tj-actions/changed-files@v23
        with:
          files: |
            **/*.rs
            **/Cargo.toml
            **/Cargo.lock
            clippy.toml
            .cargo/config.toml
            .github/workflows/lint.yml

      - name: Workflow files
        id: changed-files-workflows
        uses: tj-actions/changed-files@v23
        with:
          files: |
            .github/workflows/*.yml

  clippy:
    name: Clippy
    timeout-minutes: 45
    runs-on: ubuntu-latest
    needs: changed-files
    if: ${{ needs.changed-files.outputs.rust == 'true' }}

    steps:
      - uses: actions/checkout@v3.0.2
        with:
          persist-credentials: false

      - name: Check workflow permissions
        id: check_permissions
        uses: scherermichael-oss/action-has-permission@1.0.6
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: Swatinem/rust-cache@v1

      - name: Run clippy action to produce annotations
        uses: actions-rs/clippy-check@v1.0.7
        if: ${{ steps.check_permissions.outputs.has-permission }}
        with:
          # GitHub displays the clippy job and its results as separate entries
          name: Clippy (stable) Results
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -D warnings

      - uses: actions-rs/toolchain@v1.0.1
        if: ${{ !steps.check_permissions.outputs.has-permission }}
        with:
          toolchain: stable
          override: true

      - name: Run clippy manually without annotations
        if: ${{ !steps.check_permissions.outputs.has-permission }}
        run: cargo clippy --all-features --all-targets -- -D warnings

  fmt:
    name: Rustfmt
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: changed-files
    if: ${{ needs.changed-files.outputs.rust == 'true' }}

    steps:
      - uses: actions/checkout@v3.0.2
        with:
          persist-credentials: false

      - uses: actions-rs/toolchain@v1.0.1
        with:
          toolchain: stable
          components: rustfmt
          override: true

      - uses: Swatinem/rust-cache@v1

      - uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check

  actionlint:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: changed-files
    if: ${{ needs.changed-files.outputs.workflows == 'true' }}
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: reviewdog/action-actionlint@v1.25.1
        with:
          level: warning
          fail_on_error: false

  codespell:
    runs-on: ubuntu-latest
    needs: changed-files
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: plettich/action-codespell@master
        with:
          github_token: ${{ secrets.github_token }}
          level: warning
