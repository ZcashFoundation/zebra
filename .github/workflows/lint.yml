name: Lint

on:
  pull_request:
    branches: [main]
    paths:
      - "**/*.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - clippy.toml
      - .cargo/config.toml
      - .github/workflows/lint.yml

  push:
    branches: [main]
    paths:
      - "**/*.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - clippy.toml
      - .cargo/config.toml
      - .github/workflows/lint.yml

# Ensures that only one workflow task will run at a time. Previous builds, if
# already in process, will get cancelled. Only the latest commit will be allowed
# to run, cancelling any workflows in between
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

env:
  CLICOLOR: 1

jobs:
  clippy:
    name: clippy ${{ matrix.rust-version }} / ${{ matrix.type }}
    permissions:
      id-token: write
      statuses: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        rust-version: [stable, beta]
        type: [release, tests]
        include:
          - type: release
            args: --workspace --all-targets
            features: default-release-binaries
          - type: tests
            args: --workspace --all-targets
            features: default-release-binaries proptest-impl lightwalletd-grpc-tests zebra-checkpoints

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          components: clippy
          toolchain: ${{ matrix.rust-version }}
          cache-on-failure: true
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b #v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run clippy
        run: cargo clippy ${{ matrix.args }} --features "${{ matrix.features }}"

  crate-checks:
    permissions:
      statuses: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          cache-on-failure: true
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b #v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: taiki-e/install-action@3ee5d63d29478156148c0b53e9f3447829b47bc2 #v2.58.23
        with:
          tool: cargo-hack
      - run: cargo hack check --workspace

  msrv:
    name: MSRV
    permissions:
      id-token: write
      statuses: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - binary: zebrad
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b #v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          toolchain: 1.89 # MSRV
          cache-on-failure: true
      - run: cargo build --bin "${{ matrix.binary }}" --workspace

  docs:
    name: docs
    permissions:
      statuses: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false
      - name: Install last version of Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b #v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          toolchain: nightly
          cache-on-failure: true
      - run: cargo doc --no-deps --workspace --all-features --document-private-items --target-dir "$(pwd)"/target/internal
        env:
          # Keep in sync with ./book.yml:jobs.build
          # The -A and -W settings must be the same as the `rustdocflags` in:
          # https://github.com/ZcashFoundation/zebra/blob/main/.cargo/config.toml#L87
          RUSTDOCFLAGS: --html-in-header katex-header.html -A rustdoc::private_intra_doc_links -D warnings

  fmt:
    name: fmt
    permissions:
      statuses: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          toolchain: nightly
          components: rustfmt
      - name: Run fmt
        run: cargo fmt --all -- --check

  unused-deps:
    name: unused-deps
    permissions:
      id-token: write
      statuses: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false
      - name: Install last version of Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b #v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          toolchain: nightly
          cache-on-failure: true
      - uses: taiki-e/install-action@3ee5d63d29478156148c0b53e9f3447829b47bc2 #v2.58.23
        with:
          tool: cargo-udeps
      - run: cargo udeps --workspace --all-targets --all-features --locked

  no-test-deps:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false

      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          toolchain: stable
          cache-on-failure: true
      - name: Ensure no arbitrary or proptest dependency on default build
        run: cargo tree --package zebrad -e=features,no-dev | grep -Eq "arbitrary|proptest" && exit 1 || exit 0

  # Checks that selected rates can compile with power set of features
  features:
    name: features
    permissions:
      id-token: write
      statuses: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false
      - name: Install last version of Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b #v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          toolchain: nightly
          cache-on-failure: true
      - name: cargo install cargo-hack
        uses: taiki-e/install-action@3ee5d63d29478156148c0b53e9f3447829b47bc2 #v2.58.23
        with:
          tool: cargo-hack
      - run: cargo hack check --all
        env:
          RUSTFLAGS: -D warnings

  check-cargo-lock:
    name: check-cargo-lock
    permissions:
      id-token: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          toolchain: stable
          cache-on-failure: true
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b #v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo check --locked --all-features --all-targets

  deny:
    name: Check deny ${{ matrix.checks }} ${{ matrix.features }}
    permissions:
      statuses: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - bans
          - sources
        # We don't need to check `--no-default-features` here, because (except in very rare cases):
        # - disabling features isn't going to add duplicate dependencies
        # - disabling features isn't going to add more crate sources
        features: ["", --features default-release-binaries, --all-features]
      # Always run the --all-features job, to get accurate "skip tree root was not found" warnings
      fail-fast: false

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@ab6845274e2ff01cd4462007e1a9d9df1ab49f42 #v1.14.0
        with:
          cache-on-failure: true
      - name: Check ${{ matrix.checks }} with features ${{ matrix.features }}
        uses: EmbarkStudios/cargo-deny-action@f2ba7abc2abebaf185c833c3961145a3c275caad #v2.0.13
        with:
          # --all-features spuriously activates openssl, but we want to ban that dependency in
          # all of zebrad's production features for security reasons. But the --all-features job is
          # the only job that gives accurate "skip tree root was not found" warnings.
          # In other jobs, we expect some of these warnings, due to disabled features.
          command: check ${{ matrix.checks }} ${{ matrix.features == '--all-features' && '--allow banned' || '--allow unmatched-skip-root' }}
          arguments: --workspace ${{ matrix.features }}

  lint-success:
    name: lint success
    runs-on: ubuntu-latest
    if: always()
    needs:
      - clippy
      - crate-checks
      - docs
      - fmt
      - unused-deps
      - check-cargo-lock
      - no-test-deps
      - features
      - deny
    timeout-minutes: 30
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe #v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
