name: Lint

# Ensures that only one workflow task will run at a time. Previous builds, if
# already in process, will get cancelled. Only the latest commit will be allowed
# to run, cancelling any workflows in between
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  # we build Rust caches on main, so they can be shared by all branches:
  # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_INCREMENTAL: ${{ vars.CARGO_INCREMENTAL }}
  RUST_LOG: ${{ vars.RUST_LOG }}
  RUST_BACKTRACE: ${{ vars.RUST_BACKTRACE }}
  RUST_LIB_BACKTRACE: ${{ vars.RUST_LIB_BACKTRACE }}
  COLORBT_SHOW_HIDDEN: ${{ vars.COLORBT_SHOW_HIDDEN }}

jobs:
  changed-files:
    runs-on: ubuntu-latest
    name: Checks changed-files
    outputs:
      rust: ${{ steps.changed-files-rust.outputs.any_changed == 'true' }}
      workflows: ${{ steps.changed-files-workflows.outputs.any_changed == 'true' }}
    steps:
      - uses: actions/checkout@v3.5.3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Rust files
        id: changed-files-rust
        uses: tj-actions/changed-files@v36.4.1
        with:
          files: |
            **/*.rs
            **/Cargo.toml
            **/Cargo.lock
            clippy.toml
            .cargo/config.toml
            .github/workflows/lint.yml

      - name: Workflow files
        id: changed-files-workflows
        uses: tj-actions/changed-files@v36.4.1
        with:
          files: |
            .github/workflows/*.yml

  clippy:
    name: Clippy
    timeout-minutes: 45
    runs-on: ubuntu-latest
    needs: changed-files
    if: ${{ needs.changed-files.outputs.rust == 'true' }}

    steps:
      - uses: actions/checkout@v3.5.3
        with:
          persist-credentials: false

      - name: Install last version of Protoc
        uses: arduino/setup-protoc@v2.0.0
        with:
          # TODO: increase to latest version after https://github.com/arduino/setup-protoc/issues/33 is fixed
          version: '23.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check workflow permissions
        id: check_permissions
        uses: scherermichael-oss/action-has-permission@1.0.6
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Setup Rust with stable toolchain and default profile
      - name: Setup Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain=stable --profile=default

      - uses: Swatinem/rust-cache@v2.5.0
        with:
          shared-key: "clippy-cargo-lock"

      # TODO: keep this action until we find a better solution
      - name: Run clippy action to produce annotations
        uses: actions-rs/clippy-check@v1.0.7
        if: ${{ steps.check_permissions.outputs.has-permission }}
        with:
          # GitHub displays the clippy job and its results as separate entries
          name: Clippy (stable) Results
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -D warnings

      - name: Run clippy manually without annotations
        if: ${{ !steps.check_permissions.outputs.has-permission }}
        run: cargo clippy --all-features --all-targets -- -D warnings

  fmt:
    name: Rustfmt
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: changed-files
    if: ${{ needs.changed-files.outputs.rust == 'true' }}

    steps:
      - uses: actions/checkout@v3.5.3
        with:
          persist-credentials: false
      - uses: r7kamura/rust-problem-matchers@v1.3.0

      - name: Install last version of Protoc
        uses: arduino/setup-protoc@v2.0.0
        with:
          # TODO: increase to latest version after https://github.com/arduino/setup-protoc/issues/33 is fixed
          version: '23.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # Setup Rust with stable toolchain and default profile
      - name: Setup Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain=stable --profile=default

      # We don't cache `fmt` outputs because the job is quick,
      # and we want to use the limited GitHub actions cache space for slower jobs.
      #- uses: Swatinem/rust-cache@v2.5.0

      - run: |
          cargo fmt --all -- --check

  docs:
    name: Rust doc
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: changed-files
    if: ${{ needs.changed-files.outputs.rust == 'true' }}
    # cargo doc doesn't support '--  -D warnings', so we have to add it here
    # https://github.com/rust-lang/cargo/issues/8424#issuecomment-774662296
    #
    # The -A and -W settings must be the same as the `rustdocflags` in:
    # https://github.com/ZcashFoundation/zebra/blob/main/.cargo/config.toml#L87
    env:
      RUSTDOCFLAGS: -D warnings -A rustdoc::private_intra_doc_links

    steps:
      - uses: actions/checkout@v3.5.3
        with:
          persist-credentials: false
      - uses: r7kamura/rust-problem-matchers@v1.3.0

      - name: Install last version of Protoc
        uses: arduino/setup-protoc@v2.0.0
        with:
          # TODO: increase to latest version after https://github.com/arduino/setup-protoc/issues/33 is fixed
          version: '23.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # Setup Rust with stable toolchain and default profile
      - name: Setup Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain=stable --profile=default

      - run: |
          cargo doc --no-deps --document-private-items --all-features

  actionlint:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: changed-files
    if: ${{ needs.changed-files.outputs.workflows == 'true' }}
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: reviewdog/action-actionlint@v1.37.1
        with:
          level: warning
          fail_on_error: false

  codespell:
    runs-on: ubuntu-latest
    needs: changed-files
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: plettich/action-codespell@master
        with:
          github_token: ${{ secrets.github_token }}
          level: warning
