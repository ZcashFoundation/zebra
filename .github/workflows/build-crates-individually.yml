name: Build crates individually

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      # production code and test code
      - '**/*.rs'
      # dependencies
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      # workflow definitions
      - '.github/workflows/build-crates-individually.yml'
  pull_request:
    paths:
      # production code and test code
      - '**/*.rs'
      # dependencies
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      # workflow definitions
      - '.github/workflows/build-crates-individually.yml'

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: full
  RUST_LIB_BACKTRACE: full
  COLORBT_SHOW_HIDDEN: '1'

jobs:
  matrix:
    name: Crates matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3.0.2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: actions-rs/cargo@v1.0.3
      - id: set-matrix
        name: Dinamically build crates JSON
        run: |
          TEMP_DIR=$(mktemp -d)
          echo "$( cargo tree --depth 0 --edges no-normal,no-dev,no-build,no-proc-macro --format {p} --prefix none | cut -d ' ' -f1 | sed '/^$/d' | awk '{ printf "\"%s\",\n", $0 }' | sed '$ s/.$//')" > $TEMP_DIR/crates.txt
          JSON_CRATES=$(cat $TEMP_DIR/crates.txt)
          MATRIX=$((
            echo '{ "crates" : ['
            echo "${JSON_CRATES}"
            echo " ]}"
          ) | jq -c .)
          echo $MATRIX
          echo $MATRIX | jq .
          echo "::set-output name=matrix::$MATRIX"

  test:
    name: Test ${{ matrix.crate }} crate
    needs: [ matrix ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v3.0.2
        with:
          persist-credentials: false

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build ${{ matrix.crate }} crate normally
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --package ${{ matrix.crate }}

      - name: Build ${{ matrix.crate.name }} crate with all features
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --package ${{ matrix.crate }} --all-features

      - name: Build ${{ matrix.crate }} crate with no default features
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --package ${{ matrix.crate }} --no-default-features
