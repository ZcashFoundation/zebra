[package]
name = "zebra-scan"
version = "0.1.0-alpha.14"
authors = ["Zcash Foundation <zebra@zfnd.org>"]
description = "Shielded transaction scanner for the Zcash blockchain"
license = "MIT OR Apache-2.0"
repository = "https://github.com/ZcashFoundation/zebra"
edition = "2021"

readme = "../README.md"
homepage = "https://zfnd.org/zebra/"
# crates.io is limited to 5 keywords and categories
keywords = ["zebra", "zcash"]
# Must be one of <https://crates.io/category_slugs>
categories = ["cryptography::cryptocurrencies"]

[[bin]] # Bin to run the Scanner gRPC server
name = "scanner-grpc-server"
path = "src/bin/rpc_server.rs"
required-features = ["proptest-impl"]

[[bin]] # Bin to run the Scanner tool
name = "zebra-scanner"
path = "src/bin/scanner/main.rs"

[[bin]]
name = "scanning-results-reader"
path = "src/bin/scanning-results-reader/main.rs"
required-features = ["results-reader"]

[[bin]] # Bin to run zebrad, used in scanner tests
name = "zebrad-for-scanner"
path = "src/bin/zebrad-for-scanner/main.rs"

[features]

# Production features that activate extra dependencies, or extra features in dependencies

# Test features

proptest-impl = [
  "proptest",
  "proptest-derive",
  "zebra-state/proptest-impl",
  "zebra-chain/proptest-impl",
  "zebra-test",
  "bls12_381",
  "ff",
  "group",
  "jubjub",
  "rand",
  "zcash_note_encryption",
]

# Needed for the zebra-scanner binary.
results-reader = [
  "jsonrpc",
  "hex"
]

[dependencies]

color-eyre = { workspace = true }
indexmap = { workspace = true, features = ["serde"] }
itertools = { workspace = true }
semver = { workspace = true }
serde = { workspace = true, features = ["serde_derive"] }
tokio = { workspace = true, features = ["time"] }
tower = { workspace = true }
tracing = { workspace = true }
futures = { workspace = true }

# ECC dependencies.
zcash_client_backend.workspace = true
zcash_keys = { workspace = true, features = ["sapling"] }
zcash_primitives.workspace = true
zcash_address.workspace = true
sapling-crypto.workspace = true

zebra-chain = { path = "../zebra-chain", version = "1.0.0-beta.45", features = ["shielded-scan"] }
zebra-state = { path = "../zebra-state", version = "1.0.0-beta.45", features = ["shielded-scan"] }
zebra-node-services = { path = "../zebra-node-services", version = "1.0.0-beta.45", features = ["shielded-scan"] }
zebra-grpc = { path = "../zebra-grpc", version = "0.1.0-alpha.12" }
zebra-rpc = { path = "../zebra-rpc", version = "1.0.0-beta.45" }

chrono = { workspace = true, features = ["clock", "std", "serde"] }

# test feature proptest-impl
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }

bls12_381 = { workspace = true, optional = true }
ff = { workspace = true, optional = true }
group = { workspace = true, optional = true }
jubjub = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
zcash_note_encryption = { workspace = true, optional = true }

zebra-test = { path = "../zebra-test", version = "1.0.0-beta.45", optional = true }

# zebra-scanner binary dependencies
tracing-subscriber = { workspace = true, features = ["env-filter"] }
structopt = { workspace = true }
lazy_static = { workspace = true }
serde_json = { workspace = true }

jsonrpc = { workspace = true, optional = true }
hex = { workspace = true, optional = true }

zebrad = { path = "../zebrad", version = "2.2.0" }

[dev-dependencies]
insta = { workspace = true, features = ["ron", "redactions"] }
tokio = { workspace = true, features = ["test-util"] }

proptest = { workspace = true }
proptest-derive = { workspace = true }
bls12_381 = { workspace = true }
ff = { workspace = true }
group = { workspace = true }
jubjub = { workspace = true }
rand = { workspace = true }
tempfile = { workspace = true }
zcash_note_encryption = { workspace = true }
toml = { workspace = true }
tonic = { workspace = true }

zebra-state = { path = "../zebra-state", version = "1.0.0-beta.45", features = ["proptest-impl"] }
zebra-test = { path = "../zebra-test", version = "1.0.0-beta.45" }
