# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc a32838e046a8c97f0ee326f658d8bb763189ea14860559d33effa73ea247439f # shrinks to value_balance = ValueBalance { transparent: Amount<zebra_chain::amount::NonNegative>(0), sprout: Amount<zebra_chain::amount::NonNegative>(0), sapling: Amount<zebra_chain::amount::NonNegative>(0), orchard: Amount<zebra_chain::amount::NonNegative>(0), lockbox: Amount<zebra_chain::amount::NonNegative>(0), deferred: Amount<zebra_chain::amount::NonNegative>(1) }
cc 95d1ee62a2516a368640f455938b3b267e24ec21288d4b4c837eab53d81cb85c # shrinks to value_balance1 = ValueBalance { transparent: Amount<zebra_chain::amount::NegativeAllowed>(0), sprout: Amount<zebra_chain::amount::NegativeAllowed>(0), sapling: Amount<zebra_chain::amount::NegativeAllowed>(0), orchard: Amount<zebra_chain::amount::NegativeAllowed>(0), lockbox: Amount<zebra_chain::amount::NegativeAllowed>(-98626055099818), deferred: Amount<zebra_chain::amount::NegativeAllowed>(0) }, value_balance2 = ValueBalance { transparent: Amount<zebra_chain::amount::NegativeAllowed>(0), sprout: Amount<zebra_chain::amount::NegativeAllowed>(0), sapling: Amount<zebra_chain::amount::NegativeAllowed>(0), orchard: Amount<zebra_chain::amount::NegativeAllowed>(0), lockbox: Amount<zebra_chain::amount::NegativeAllowed>(-2001373944900183), deferred: Amount<zebra_chain::amount::NegativeAllowed>(0) }
cc 6d1e58f0e196de3980f33b2274362afad33776d0e184c7970758835c526f8192 # shrinks to value_balance1 = ValueBalance { transparent: Amount<zebra_chain::amount::NegativeAllowed>(0), sprout: Amount<zebra_chain::amount::NegativeAllowed>(0), sapling: Amount<zebra_chain::amount::NegativeAllowed>(0), orchard: Amount<zebra_chain::amount::NegativeAllowed>(0), lockbox: Amount<zebra_chain::amount::NegativeAllowed>(0), deferred: Amount<zebra_chain::amount::NegativeAllowed>(0) }, value_balance2 = ValueBalance { transparent: Amount<zebra_chain::amount::NegativeAllowed>(0), sprout: Amount<zebra_chain::amount::NegativeAllowed>(0), sapling: Amount<zebra_chain::amount::NegativeAllowed>(0), orchard: Amount<zebra_chain::amount::NegativeAllowed>(0), lockbox: Amount<zebra_chain::amount::NegativeAllowed>(0), deferred: Amount<zebra_chain::amount::NegativeAllowed>(1) }
cc a48362f7a416b0a1f39b4932252379f510810964d9f248103ce38ad290c78737 # shrinks to value_balance1 = ValueBalance { transparent: Amount<zebra_chain::amount::NegativeAllowed>(0), sprout: Amount<zebra_chain::amount::NegativeAllowed>(0), sapling: Amount<zebra_chain::amount::NegativeAllowed>(0), orchard: Amount<zebra_chain::amount::NegativeAllowed>(0), lockbox: Amount<zebra_chain::amount::NegativeAllowed>(0), deferred: Amount<zebra_chain::amount::NegativeAllowed>(0) }, value_balance2 = ValueBalance { transparent: Amount<zebra_chain::amount::NegativeAllowed>(0), sprout: Amount<zebra_chain::amount::NegativeAllowed>(0), sapling: Amount<zebra_chain::amount::NegativeAllowed>(0), orchard: Amount<zebra_chain::amount::NegativeAllowed>(0), lockbox: Amount<zebra_chain::amount::NegativeAllowed>(0), deferred: Amount<zebra_chain::amount::NegativeAllowed>(-1) }
