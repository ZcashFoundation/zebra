[package]
name = "zebra-consensus"
version = "1.0.0-beta.27"
authors = ["Zcash Foundation <zebra@zfnd.org>"]
description = "Implementation of Zcash consensus checks"
license = "MIT OR Apache-2.0"
repository = "https://github.com/ZcashFoundation/zebra"
edition = "2021"

readme = "../README.md"
homepage = "https://zfnd.org/zebra/"
# crates.io is limited to 5 keywords and categories
keywords = ["zebra", "zcash"]
# Must be one of <https://crates.io/category_slugs>
categories = ["asynchronous", "cryptography::cryptocurrencies"]

[features]
default = []

# Production features that activate extra dependencies, or extra features in dependencies

progress-bar = [
    "howudoin",
    "zebra-state/progress-bar",
]

# Experimental mining RPC support
getblocktemplate-rpcs = [
     "zebra-state/getblocktemplate-rpcs",
     "zebra-node-services/getblocktemplate-rpcs",
     "zebra-chain/getblocktemplate-rpcs",
]

# Test-only features
proptest-impl = ["proptest", "proptest-derive", "zebra-chain/proptest-impl", "zebra-state/proptest-impl"]

[dependencies]
blake2b_simd = "1.0.1"
bellman = "0.14.0"
bls12_381 = "0.8.0"
halo2 = { package = "halo2_proofs", version = "0.3.0" }
jubjub = "0.10.0"
rand = "0.8.5"
rayon = "1.7.0"

chrono = { version = "0.4.26", default-features = false, features = ["clock", "std"] }
displaydoc = "0.2.4"
lazy_static = "1.4.0"
once_cell = "1.18.0"
serde = { version = "1.0.164", features = ["serde_derive"] }

futures = "0.3.28"
futures-util = "0.3.28"
metrics = "0.21.1"
thiserror = "1.0.40"
tokio = { version = "1.29.1", features = ["time", "sync", "tracing", "rt-multi-thread"] }
tower = { version = "0.4.13", features = ["timeout", "util", "buffer"] }
tracing = "0.1.37"
tracing-futures = "0.2.5"

orchard = "0.4.0"

zcash_proofs = { version = "0.11.0", features = ["local-prover", "multicore", "download-params"] }

# Work around a `cargo` dependency resolution bug which causes publish dry run errors like:
# > error: failed to prepare local package for uploading
# > no matching package named `tower-batch-control` found
# > location searched: registry `crates-io`
# > required by package `zebra-consensus v1.0.0-beta.27 (/home/dev/zebra/zebra-consensus)`
#
# These errors happen because the crate isn't published yet. Normally, `cargo` would ignore missing
# crate versions that it's just about to publish. But Zebra triggers a bug in that code.
#
# To work around the bug, we allow a dependency on an earlier version of the crate. After the
# release, the correct version will be enforced by the Cargo.lock, path dependency, or `cargo`'s
# default "latest version" rule.
#
# If the earlier version is too old to compile, change it to the latest released version.
#
# <https://github.com/rust-lang/cargo/issues/4242>
#
# By default, version requirements are "^" requirements, which means "any later compatible version".
tower-fallback = { path = "../tower-fallback/", version = "0.2.41-beta.2" }
tower-batch-control = { path = "../tower-batch-control/", version = "0.2.41-beta.2" }

zebra-chain = { path = "../zebra-chain", version = "1.0.0-beta.26" }
zebra-node-services = { path = "../zebra-node-services", version = "1.0.0-beta.26" }
zebra-script = { path = "../zebra-script", version = "1.0.0-beta.26" }
zebra-state = { path = "../zebra-state", version = "1.0.0-beta.26" }

# prod feature progress-bar
howudoin = { version = "0.1.2", optional = true }

# Test-only dependencies
proptest = { version = "1.2.0", optional = true }
proptest-derive = { version = "0.3.0", optional = true }

[dev-dependencies]
color-eyre = "0.6.2"
# This is a transitive dependency via color-eyre.
# Enable a feature that makes tinyvec compile much faster.
tinyvec = { version = "1.6.0", features = ["rustc_1_55"] }

hex = "0.4.3"
num-integer = "0.1.45"
proptest = "1.2.0"
proptest-derive = "0.3.0"
spandoc = "0.2.2"

tokio = { version = "1.29.1", features = ["full", "tracing", "test-util"] }
tracing-error = "0.2.0"
tracing-subscriber = "0.3.17"

zebra-state = { path = "../zebra-state", features = ["proptest-impl"] }
zebra-chain = { path = "../zebra-chain", features = ["proptest-impl"] }
zebra-test = { path = "../zebra-test/" }
